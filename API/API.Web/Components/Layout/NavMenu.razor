@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject UserSessionService Session
@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg bg-white">
    <div class="container d-flex justify-content-between align-items-center">
        <img src="/Images/logoSAN.jpg" alt="logoSAN" width="250" height="">

        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    @if (!Session.IsLoggedIn) // Sprawdź, czy użytkownik jest zalogowany
                    {
                        <NavLink class="nav-link" href="login">
                            Logowanie/Rejestracja
                        </NavLink>
                    }
                    else
                    {
                        <span class="navbar-text">
                            Witaj, @Session.Username!
                        </span>
                        <button class="btn btn-danger" @onclick="Logout">Wyloguj</button>
                    }
                </li>
            </ul>
        </div>
    </div>
</nav>
@if (Session.IsLoggedIn) // Sprawdź, czy użytkownik jest zalogowany
{
    <nav class="navbar navbar-expand-lg" style="background-color: #073980;">
        <div class="container">
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
                    <li class="nav-item mx-3">
                        <NavLink href="" Match="NavLinkMatch.All" class="nav-link" style="color:white; background-color:transparent; padding:0.5rem 1.2rem; border-radius:6px;">
                            SALE
                        </NavLink>
                    </li>
                    <li class="nav-item mx-3">
                        <NavLink href="addSala" class="nav-link" style="color:white; background-color:transparent; padding:0.5rem 1.2rem; border-radius:6px;">
                            <span class="bi bi-plus-square-fill"></span> DODAJ REZERWACJE
                        </NavLink>

                    </li>
                    <li class="nav-item mx-3">
                        <NavLink href="editRezerwacja" class="nav-link" style="color:white; background-color:transparent; padding:0.5rem 1.2rem; border-radius:6px;">
                            EDYTUJ REZERWACJE
                        </NavLink>
                    </li>
                    <li class="nav-item mx-3">
                        <NavLink href="dawnloadData" class="nav-link" style="color:white; background-color:transparent; padding:0.5rem 1.2rem; border-radius:6px;">
                            POBIERZ
                        </NavLink>
                    </li>
                    <li class="nav-item mx-3">
                        <NavLink href="calendar" class="nav-link" style="color:white; background-color:transparent; padding:0.5rem 1.2rem; border-radius:6px;">
                            KALENDARZ
                        </NavLink>
                    </li>
                </ul>

            </div>
        </div>
    </nav>
}

@code {
    private string username;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            username = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "username");
            Console.WriteLine($"Zalogowany użytkownik: {username}");  // Debugowanie
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
        username = Session.Username;  
    }

    private async Task Logout()
    {
        try
        {
            Console.WriteLine("Logout button clicked!");
            
            Session.Clear();

            await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "username");
            await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "email");
            
            StateHasChanged();
            
            Navigation.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during logout: {ex.Message}");
        }
    }

}