@page "/register"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IOsobyService OsobyService

<PageTitle>Rejestracja</PageTitle>
<nav class="navbar navbar-expand-lg" style="background-color: #073980;">
    <a style="color: #073980; height: 40px">.</a>
</nav>
<div class="d-flex flex-column justify-content-center align-items-center">
    <h1>Rejestracja</h1>

    <EditForm Model="registerModel" OnValidSubmit="HandleStandardRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nazwa Użytkownika</label>
            <InputText class="form-control" @bind-Value="registerModel.Username" />
        </div>
        <div class="mb-3">
            <label class="form-label">Imię</label>
            <InputText class="form-control" @bind-Value="registerModel.FirstName" />
        </div>
        <div class="mb-3">
            <label class="form-label">Nazwisko</label>
            <InputText class="form-control" @bind-Value="registerModel.LastName" />
        </div>
        <div class="mb-3">
            <label class="form-label">Numer Indeksu</label>
            <InputText class="form-control" @bind-Value="registerModel.IndexNumber" />
        </div>
        <div class="mb-3">
            <label class="form-label">Adres Email</label>
            <InputText type="email" class="form-control" @bind-Value="registerModel.Email" />
        </div>
        <div class="mb-3">
            <label class="form-label">Hasło</label>
            <InputText type="password" class="form-control" @bind-Value="registerModel.Password" />
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary me-2">Zarejestruj</button>
            <a class="btn btn-danger" href="#" role="button">Anuluj</a>
        </div>

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert @(IsSuccess ? "alert-success" : "alert-danger")" role="alert">
                @Message
            </div>
        }
    </EditForm>
</div>

@code {
    private RegisterModel registerModel = new();
    private string Message;
    private bool IsSuccess;

    protected override void OnInitialized()
    {
        Console.WriteLine("✅ Register test page initialized");
    }

    private async Task HandleStandardRegister()
    {
        try
        {
            var (success, message) = await OsobyService.RegisterAsync(registerModel);
            Message = message;
            IsSuccess = success;

            if (success)
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Message = $"Wystąpił błąd: {ex.Message}\nStack trace:\n{ex.StackTrace}";
            IsSuccess = false;
            Console.Error.WriteLine(ex);
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; }

        [Required(ErrorMessage = "First name is required")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last name is required")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "Index number is required")]
        public string IndexNumber { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters long")]
        public string Password { get; set; }
    }
}
