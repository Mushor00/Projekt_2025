@page "/editSala"
@inject ISaleApiClient SaleApiClient
@inject NavigationManager Navigation
@using API.ApiService.Models
@rendermode InteractiveServer

<div class="text-center">
    <h3>Edycja sal</h3>
</div>


@if (sale == null)
{
    <p><em>Ładowanie sal...</em></p>
}
else if (sale.Count == 0)
{
    <p><em>Brak sal do wyświetlenia.</em></p>
}
else
{
    <div style="max-width: 400px; margin: auto;">
        <div class="mb-3">
            <label>Wybierz salę</label>
            <select class="form-select" @onchange="OnSalaChanged">
                <option value="">-- wybierz --</option>
                @foreach (var s in sale)
                {
                    <option value="@s.Id">@s.Nazwa (@s.Budynek)</option>
                }
            </select>
        </div>
    </div>

        <EditForm Model="selectedSala" OnValidSubmit="ZapiszSale" FormName="EditSalaForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div style="max-width: 400px; margin: auto;">
                <div class="mb-3">
                    <label class="form-label">Numer</label>
                    <InputNumber class="form-control" @bind-Value="selectedSala.Numer" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Budynek</label>
                    <InputText class="form-control" @bind-Value="selectedSala.Budynek" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Nazwa</label>
                    <InputText class="form-control" @bind-Value="selectedSala.Nazwa" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Pietro</label>
                    <InputNumber class="form-control" @bind-Value="selectedSala.Pietro" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Pojemność</label>
                    <InputNumber class="form-control" @bind-Value="selectedSala.Pojemnosc" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Dostępna</label>
                    <InputCheckbox class="form-check-input" @bind-Value="selectedSala.Dostepna" />
                </div>

                <button type="submit" class="btn btn-primary">Zapisz</button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(wiadomosc))
        {
            <div class="alert @(czyBlad ? "alert-danger" : "alert-success") mt-3">@wiadomosc</div>
        }
}

@code {
    private List<Sala>? sale;
    private Sala selectedSala = new Sala();
    private string wiadomosc = "";
    private bool czyBlad = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            sale = await SaleApiClient.GetMappedSaleAsync();
        }
        catch (Exception ex)
        {
            wiadomosc = $"Błąd ładowania sal: {ex.Message}";
            czyBlad = true;
        }
    }

    private void OnSalaChanged(ChangeEventArgs e)
    {
        try
        {
            if (int.TryParse(e.Value?.ToString(), out var id) && id > 0)
            {
                selectedSala = sale?.FirstOrDefault(s => s.Id == id);
            }
            else
            {
                selectedSala = null;
            }
        }
        catch (Exception ex)
        {
            wiadomosc = $"Błąd wyboru sali: {ex.Message}";
            czyBlad = true;
        }
    }

    private async Task ZapiszSale()
    {
        try
        {
            if (selectedSala == null)
            {
                wiadomosc = "Nie wybrano sali do edycji.";
                czyBlad = true;
                return;
            }

            var sukces = await SaleApiClient.UpdateSalaAsync(selectedSala);
            
            if (sukces)
            {
                wiadomosc = "Sala została zapisana pomyślnie.";
                czyBlad = false;
            }
            else
            {
                wiadomosc = "Nie udało się zapisać sali.";
                czyBlad = true;
            }
        }
        catch (Exception ex)
        {
            wiadomosc = $"Błąd zapisu sali: {ex.Message}";
            czyBlad = true;
        }
    }
}